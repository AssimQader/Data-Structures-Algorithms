/* Implemented by Assim Qader */ 

#include<iostream>
using namespace std;

/*
index: 0   1     2    3     4     5
    __________________________________
   | 50  |  7  | 10 |  9  |  16 |  4  |
   |_____|_____|____|_____|_____|_____|
     pi                          pivot
*/

int partition(int arr[], int start, int end) 
{
	int pivot = arr[end]; 
	int pi = start; 

	for (int i = start; i < end; ++i) 
	{
		if (arr[i] <= pivot)
		{
			swap(arr[i], arr[pi]); 
			pi++; 
		}
	}

//when i reaches r: exit loop and swap pi with pivot( arr[end] )//

	swap(arr[pi], arr[end]); //arr[end] = pivot, but never ever write: swap(arr[pi], pivot); it is completely wrong.
	return pi; 
}

 
void quickSort(int arr[], int start, int end)
{
	if (start < end)
	{
		int pivLoc = partition(arr, start, end); 
		quickSort(arr, start, pivLoc - 1);
		quickSort(arr, pivLoc + 1, end);
	}
}

int main()
{
	int arr[] = { 7, 10, 30, 9, 55,77,0,22,11, 2, 44, 103, 2314,1 };
	int x = sizeof(arr) / sizeof(arr[0]);

	quickSort(arr, 0, x-1);

	for (int i = 0; i < x; ++i)
	{
		cout << arr[i] << " ";
	}
	cout << "\n";
}
